openapi: 3.1.0
x-stoplight:
  id: ud6n7a6xq8ndz
info:
  title: Register
  version: '1.0'
servers:
  - url: 'http://localhost'
paths:
  /register:
    post:
      summary: ''
      operationId: post-register
      responses:
        '204':
          description: No Content
      description: auth.register
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  format: email
                  example: hoge@gmail.com
                  description: メールアドレス
                password:
                  type: string
                  format: password
                  description: パスワード
                name:
                  type: string
                  description: 名前
                age:
                  type: integer
                  minimum: 0
                  maximum: 130
                  format: int32
                  description: 年齢
                sex:
                  type: integer
                  minimum: 0
                  maximum: 2
                  format: int32
                  description: 性別
                image:
                  type: string
                  description: プロフィール画像
              required:
                - email
                - password
                - name
          application/xml:
            schema:
              type: object
              properties: {}
        description: ''
    parameters: []
  /api/profile:
    parameters: []
    patch:
      summary: ''
      operationId: patch-profile
      responses:
        '200':
          description: OK
      description: api.profile
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  example: hoge@gmail.com
                name:
                  type: string
                  example: 山田花子
                age:
                  type: integer
                  example: '14'
                sex:
                  type: integer
                  example: 0
                  minimum: 0
                  maximum: 2
                image:
                  type: string
                  example: hoge.png
        description: ''
  /login:
    post:
      summary: ''
      operationId: post-login
      responses:
        '204':
          description: No Content
      description: auth.login
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  format: email
                  example: hoge@gmail.com
                  description: メールアドレス
                password:
                  type: string
                  format: password
                  description: パスワード
              required:
                - email
                - password
          application/xml:
            schema:
              type: object
              properties: {}
        description: ''
    parameters: []
  /logout:
    post:
      summary: ''
      operationId: post-logout
      responses:
        '204':
          description: No Content
      description: auth.logout
      parameters: []
    parameters: []
  /api/anime:
    get:
      summary: ''
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
      operationId: get-anime
      description: api.anime
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  example: 山田花子
                created_years:
                  type: integer
                  format: int32
                  default: 2022
                  example: 2022
                  minimum: 2014
                for_sex:
                  type: integer
                  default: 0
                  example: 0
                  format: int32
                season:
                  type: integer
                  format: int32
                  default: 1
                  example: 1
                  minimum: 1
                is_favo:
                  type: boolean
                is_watch:
                  type: boolean
          application/xml:
            schema:
              type: object
              properties: {}
          multipart/form-data:
            schema:
              type: object
              properties: {}
        description: ''
    parameters: []
  /api/movie:
    get:
      summary: ''
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Movie'
      operationId: get-api-movie
      description: api.movie
  /api/watch:
    post:
      summary: ''
      operationId: post-api-watch
      responses:
        '200':
          description: OK
      description: api.watch
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                anime_id:
                  type: integer
                  example: 21
                  minimum: 1
                  description: アニメテーブルのID
                  format: int64
              required:
                - anime_id
        description: ''
  /api/favo:
    post:
      summary: ''
      operationId: post-api-favo
      responses:
        '200':
          description: OK
      description: api.favo
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                anime_id:
                  type: integer
                  minimum: 1
                  example: 21
                  format: int64
components:
  schemas:
    User:
      title: User
      type: object
      examples:
        - id: 142
          name: 山田花子
          email: hoge@gmail.com
          password: njdakfafa039dfafa
          image: hoge@png
          age: 20
          sex: 0
          email_verified_at: '2023-01-01 09:11:10 '
          remember_token: J6bIerMrSg
          created_at: '2023-01-01 09:11:10'
          updated_at: '2023-01-01 09:11:10'
      properties:
        id:
          type: integer
          minimum: 1
          description: ID
        name:
          example: 山田花子
          type: string
          maxLength: 255
          description: 名前
        email:
          type: string
          format: email
          maxLength: 255
          example: hoge@gmail.com
          description: メールアドレス
        password:
          type: string
          format: password
          example: njdakfafa039dfafa
          maxLength: 255
          description: パスワード
        image:
          type: string
          example: hoge@png
          maxLength: 255
          description: プロフィール画像URL
        age:
          type: integer
          format: int64
          maximum: 130
          minimum: 0
          example: 20
          description: 年齢
        sex:
          type: integer
          example: 0
          minimum: 0
          maximum: 2
          format: int32
          description: '性別　男:0 女:1 どちらでもない:2'
        email_verified_at:
          type: string
          format: date-time
          example: '2023-01-01 09:11:10'
          description: 電子メールアドレスが確認された日時
        remember_token:
          type: string
          example: J6bIerMrSg
          maxLength: 255
          description: トークン
        created_at:
          type: string
          format: date-time
          example: '2023-01-01 09:11:10'
          description: 作成日時
        updated_at:
          type: string
          format: date-time
          example: '2023-01-01 09:11:10'
          description: 更新日時
      required:
        - id
        - name
        - email
        - password
    Anime:
      title: ANIME
      x-stoplight:
        id: d17c4d648c1f7
      type: object
      properties:
        id:
          type: integer
          format: int64
          minimum: 1
          example: 124
          description: ID
        anime_api_id:
          type: integer
          format: int64
          minimum: 1
          default: 432
          description: アニメAPIのアニメID
        name:
          type: string
          example: 進撃の巨人
          description: 作品名
        for_sex:
          type: integer
          example: 0
          minimum: 0
          maximum: 1
          description: '男女向け 0: 男向け　1: 女向け'
        image:
          type: string
          format: uri
          example: 'https:hoge'
          description: アニメ画像URL
        season:
          type: integer
          format: int32
          minimum: 1
          maximum: 4
          example: 1
          description: 'シーズン：1: 春　2: 夏 3: 秋　4: 冬'
        public_url:
          type: string
          format: uri
          example: 'https://www.google.com/?hl=ja'
          description: 公式サイトURL
        product_companies:
          type: string
          example: 京都アニメーション
          description: 制作会社
        created_years:
          type: integer
          format: int32
          description: 作品作成年
      required:
        - id
        - anime_api_id
        - name
        - for_sex
        - image
        - season
        - public_url
        - product_companies
        - created_years
    Movie:
      title: Movie
      x-stoplight:
        id: tvqujo2oyuxh4
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 54
          minimum: 1
        name:
          type: string
          example: Nexflix
          minLength: 1
        image:
          type: string
          example: hoge@png
        public_url:
          type: string
          format: uri
          example: 'https://www.google.com/?hl=ja'
          minLength: 1
